name: Release Version

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - closed
      - synchronize

# Define minimum required permissions
permissions:
  contents: write    # Needed for creating/updating releases and uploading assets
  pull-requests: read # Only need to read PR information

jobs:
  prepare-release-assets:
    runs-on: ubuntu-latest
    environment: production
    outputs:
      upload_url: ${{ steps.draft_release.outputs.upload_url }}
      release_id: ${{ steps.draft_release.outputs.release_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Install dependencies
        run: yarn

      - name: Extract tag name
        id: extract_tag
        run: | 
         echo "VERSION=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
         echo GOOGLE_ANALYTICS_API_SECRET=${{ secrets.GOOGLE_ANALYTICS_API_SECRET }} >> .env
      
      - name: Populate environment variables
        run: |
          # Get all secrets and add them to .env
          for secret in $(echo '${{ toJSON(secrets) }}' | jq -r 'keys[]'); do
            value=$(echo '${{ toJSON(secrets) }}' | jq -r --arg key "$secret" '.[$key]')
            echo "${secret}=${value}" >> .env
          done

      - name: Build and zip the extension
        run: |
          mkdir -p dist
          yarn run build-css
          yarn run dist
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VERSION: ${{ env.VERSION }}
          SENTRY_RELEASE: "shortcut-assistant@${{ env.VERSION }}"

      - name: Upload dist.zip as an artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: dist-zip
          path: dist/dist.zip

      - name: Create or update draft release
        id: draft_release
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const createDraftRelease = require('./.github/scripts/create-draft-release.js');
            return await createDraftRelease({ github, context, core });

  upload-release-asset:
    needs: prepare-release-assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download dist.zip artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: dist-zip
          path: dist

      - name: Upload release asset
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const uploadReleaseAsset = require('./.github/scripts/upload-release-asset.js');
            await uploadReleaseAsset({ 
              github, 
              context, 
              core, 
              releaseId: ${{ needs.prepare-release-assets.outputs.release_id }}
            });

  publish-release:
    needs: [prepare-release-assets, upload-release-asset]
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Publish release
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const publishRelease = require('./.github/scripts/publish-release.js');
            await publishRelease({ 
              github, 
              context, 
              core, 
              releaseId: ${{ needs.prepare-release-assets.outputs.release_id }} 
            });
