name: Publish Release

on:
  workflow_run:
    workflows: ["Prepare Release Assets"]
    types:
      - completed

jobs:
  upload-release-asset:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' && github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download dist.zip artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: dist-zip
          path: dist/dist.zip

      - name: Upload release asset
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;
            const releases = await github.rest.repos.listReleases({
              owner,
              repo,
            });
            const releaseTag = pr.title;
            let draftRelease = releases.data.find(release => release.tag_name === releaseTag && release.draft === true);
            const releaseId = draftRelease.id;
            const assetPath = './dist/dist.zip';
            const assetName = 'ChromeExtension.zip';
            const assetContentType = 'application/zip'; 
            const data = require('fs').readFileSync(assetPath);
            console.log(`Uploading asset ${assetPath} to release ${releaseId}`);
            console.log(`Release published: https://github.com/${owner}/${repo}/releases/tag/${releaseId}`);
            release = await github.rest.repos.updateRelease({
              owner,
              repo,
              release_id: releaseId,
              draft: false,
            });
            await github.rest.repos.uploadReleaseAsset({
              owner,
              repo,
              release_id: releaseId,
              name: assetName,
              data,
            });
            console.log('Asset uploaded');
